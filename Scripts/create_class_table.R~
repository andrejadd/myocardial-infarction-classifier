

compile_ROC_latex_table <- function(DATA_SETUP_TEST) {
    
    
    RESULT_DIR = "Results"
    
    roc_points = read.table(sprintf("%s/roc_points_results_datatest%i.csv", RESULT_DIR, DATA_SETUP_TEST), sep=",", header=T)
    
    #la_str_tmp = "\\begin{tabular}{l | c c c} \n \\hline \n"
    
    ## INSERT HEADER
    #la_str_tmp = sprintf("%s Method & Error Rate & Specificity & Sensitivity \\\\ \n \\hline \n", la_str_tmp)
    
    #for(i in 1:nrow(roc_points)) {
    ##    la_str_tmp = sprintf("%s %s & %.2g & %.2g & %.2g \\\\ \n", la_str_tmp, roc_points$method_name[i], roc_points$error[i], (1 - roc_points$fpr[i]), roc_points$sensitivity[i] )
    ##}
    
    ## INSERT END
    #la_str_tmp = sprintf("%s\\hline \n\\end{tabular} \n", la_str_tmp)
    
    #fileConn<-file("output.tex")
    #writeLines(la_str_tmp, fileConn)
    #close(fileConn)


    
    
    ##
    ## transpose table so that method names are in the columns
    ##
    
    
    
    max_meth_id = 7
    
    la_str_tmp = sprintf("  & Error &")
    
    for(i in 1:max_meth_id) {
        
        la_str_tmp = sprintf("%s %.2g", la_str_tmp, roc_points$error[i])
        
        if (i != max_meth_id)
            la_str_tmp = sprintf("%s & ", la_str_tmp)
        
    }
    la_str_tmp = sprintf("%s \\\\ \n", la_str_tmp)
    
    ##
    ## add Specificity
    ##
    la_str_tmp = sprintf("%s $D_%i$ & Specificity &", la_str_tmp, DATA_SETUP_TEST)
    for(i in 1:max_meth_id) {
        
        la_str_tmp = sprintf("%s %.2g", la_str_tmp, (1 - roc_points$fpr[i]))
        
        if (i != max_meth_id)
            la_str_tmp = sprintf("%s & ", la_str_tmp)
        
    }
    la_str_tmp = sprintf("%s \\\\ \n", la_str_tmp)
    
    ##
    ## add Sensitivity
    ##
    la_str_tmp = sprintf("%s & Sensitivity &", la_str_tmp)
    for(i in 1:max_meth_id) {
        
        la_str_tmp = sprintf("%s %.2g", la_str_tmp, (roc_points$sensitivity[i]))
        
        if (i != max_meth_id)
            la_str_tmp = sprintf("%s & ", la_str_tmp)
        
    }
    la_str_tmp = sprintf("%s \\\\ \n", la_str_tmp)
        

    return(la_str_tmp)
}

    
create_class_table <- function() {


    latex_str = "\\begin{tabular}{l l | c c c c c c c } \n \\hline \n"
    
    ## INSERT HEADER
    latex_str = sprintf("%s & & GLM & Lasso & GP-ARD & LDA & KNN & RF & Tree \\\\ \n ", latex_str)
    browser()
    DATA_SETUP_TEST = 1
    latex_str = sprintf("%s \\hline \n %s", latex_str, compile_ROC_latex_table(DATA_SETUP_TEST) )

    DATA_SETUP_TEST = 2
    latex_str = sprintf("%s \\hline \n %s", latex_str, compile_ROC_latex_table(DATA_SETUP_TEST) )

    DATA_SETUP_TEST = 3
    latex_str = sprintf("%s \\hline \n %s", latex_str, compile_ROC_latex_table(DATA_SETUP_TEST) )


    ## INSERT END
    latex_str = sprintf("%s\\hline \n\\end{tabular} \n", latex_str)

    fileConn<-file("output_trans.tex")
    writeLines(latex_str, fileConn)
    close(fileConn)

    print(latex_str)

}

